task_assignment_taskManagement:
  class: sfDoctrineRouteCollection
  options:
    model:                TaskAssignment
    module:               taskManagement
    prefix_path:          /:sf_culture/taskManagement
    column:               id
    with_wildcard_routes: true

task_assignment:
  class: sfDoctrineRouteCollection
  options:
    model:                TaskAssignment
    module:               dataAdminJob
    prefix_path:          /:sf_culture/dataAdminJob
    column:               id
    with_wildcard_routes: true
####Route for message module for frontend
my_inbox:
 url: /:sf_culture/inbox
 param: { module: messages, action: index}
investment_request:
 url: /:sf_culture/investment/requests
 param: {module: investmentrequest, action: index}
investment_reject:
 url: /:sf_culture/investment/reject
 param: {module: investmentrejected, action: index}
tax_exemptions:
 url:   /:sf_culture/tax/exemptions
 param: {module: taxexemptions, action: index}
user_tasks:
 url: /:sf_culture/mytasks
 param: {module: taskManagement, action: tasks }
start_work:
 url: /:sf_culture/start
 param: {module: dashboard, action:start}
make_report: #Route for creating a new Project Summary Report
 url: /:sf_culture/make/report
 param: {module: projectSummary, action: new}
investment_cert_task:
 url: /:sf_culture/certificate/taskAssign
 param: { module: InvestmentCertTaskAssignment, action: index }
information_portlets:
 url: /:sf_culture/information/portlets
 param: { module: portlets, action: index }
investment_resubmit:
 url: /:sf_culture/resubmit/application
 param: {module: investmentresubmit, action: new}
eireport_resubmission:
 url: /:sf_culture/resubmit/report
 param: {module: eireportresubmit, action: new}
eireport_approve:
 url: /:sf_culture/approve/report
 param: {module: eiaReport, action: approve}
eiacertificate_issue:
 url: /:sf_culture/EIA/certificate/issue
 param: {module: eiacertificates, action: issue}
investment_certificate_report:
 url: /:sf_culture/Investment/certificates/issued/report
 param: {module: reports, action: issued}
investment_per_sector:
 url: /:sf_culture/investment/sectors/report
 param: {module: reports, action: sectors}
backup_system:
 url: /:sf_culture/database/backup
 param: {module: dashboard, action: dashboardBackup}
eiaissued_certificate_report:
 url: /:sf_culture/eiacertificates/issued
 param: {module: eiareporting, action: issuedEIA}
# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing
channel:
  class:   sfDoctrineRouteCollection
  options: { model: sfKoreroChannel, module: sfKoreroChannel, prefix_path: /channel }

channel_show_channel:
  url:     /channel/:slug
  class:   sfDoctrineRoute
  options: { model: sfKoreroChannel, type: object }
  param:   { module: sfKoreroChannel, action: show }

message:
  class:   sfDoctrineRouteCollection
  options: { model: sfKoreroMessage, module: sfKoreroMessage, prefix_path: /message }
# default rules
homepage:
  url:   /
  param: { module: dashboard, action: index }
localized_homepage:
 url:   /:sf_culture/
 param: { module: dashboard, action: index }
 requirements:
  sf_culture: (?:en|fr|rw)
change_language:
  url:   /change_language
  param: { module: language, action: changeLanguage }
# Task assignment route
task:
 url: /:sf_culture/tasks
 param: {module: taskAssign, action: index}
# generic rules
# please, remove them by adding more specific rules
####Search for user investment application details
investment_search:
 url: /search/applicant
 param: {module: dashboard, action: search}
default_index:
 url:   /:module
 param: { action: index }
investment_certificates:
 url: /:sf_culture/certificates
 param: {module: investmentcertificates, action: index }
default:
  url:   /:module/:action/*
################### Application Security routing ################################
sf_guard_signin:
 url:   /:sf_culture/login
 param: { module: sfGuardAuth, action: signin }
sf_guard_signout:
 url:   /:sf_culture/logout
 param: { module: sfGuardAuth, action: signout }
sf_guard_users:
 url:   /users
 param: { module: sfGuardUser, action: index }
sf_guard_user_groups:
 url:   /groups
 param: { module: sfGuardGroup, action: index }
sf_guard_user_permissions:
 url:   /permissions
 param: { module: sfGuardPermission, action: index }

##################ApplyPlugin route################# 
apply:
 url:  /:sf_culture/apply
 param: { module: sfApply, action: apply }
reset:
 url: /:sf_culture/reset
 param: { module: sfApply, action: reset }
resetRequest:
 url: /:sf_culture/reset-request
 param: { module: sfApply, action: resetRequest }
validate:
 url: /:sf_culture/confirm/:validate
 param: { module: sfApply, action: confirm }
settings:
 url: /:sf_culture/settings
 param: { module: sfApply, action: settings }
sf_guard_password_reset:
 url: /:sf_culture/reset-request
 param: { module: sfApply, action: resetRequest }