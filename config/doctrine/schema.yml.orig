##This File Describes the Database for the Investment Registration,EIA processes and Import and Export Exemptions
#Author - Boniface Irunguh
##Company - Smartline Solutions. All Rights Reserved
##Email - Mwendia.bonface4@gmail.com
######### Start Investment Registration Certificate Tables #########################
InvestmentApplication: ## Contains the application details from the investors
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  name: {type: string(255), notnull: true}  
  registration_number: {type: string(255), notnull: true}
  title_in_company: { type: string(255), notnull: false }
  business_sector: {type: string(1000), notnull: true}
  business_category: {type: string(255), notnull: true}
  representative_name: {type: string(255), notnull: true}
  office_telephone: {type: string(255), notnull: false}
  fax: {type: string(255), notnull: false}
  post_box: {type: string(255), notnull: false}
  location: {type: string(255), notnull: false}
  sector: {type: string(255), notnull: false}
  district: {type: string(255), notnull: false}
  city_province: {type: string(255), notnull: false}
  applicant_reference_number: {type: string(255), notnull: true, unique: true}
  token: {type: string(255), notnull: false} 
### Stores the Business Proposal of the user applying for the investment certificate
BusinessPlan:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  investment_id: {type: integer, notnull: true, unique: true}
  ### Project Brief Information
  project_brief: {type: string(4000), notnull: true}
  ### Applied on Incentives
  exemption_on_machinery: {type: string(255), notnull: false}
  exemption_raw_materials: {type: string(4000), notnull: false}
  land_ownership_document: {type: string(255), notnull: false}
  bill_of_quantiy: {type: string(255), notnull: false}
  drawings: {type: string(255), notnull: false}
  construction_permits: {type: string(255), notnull: false}
  investment_allowances: {type: string(255), notnull: false}
  additional_incentives: {type: string(4000), notnull: false}
  visa_work_permits: {type: string(4000), notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  InvestmentApplication: {local: investment_id, foreign:id , foreignAlias: InvestmentBusinessPlan, onDelete: CASCADE}
### We need to create a table to record resubmission requests when a data admin decides that a certain business requires to resubmit information
InvestmentResubmission:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  business_id : {type: integer, notnull: true, unique: true}
  message_subject: {type: string(255), notnull: true}
  message: {type: string(2000), notnull: true}
######  table for testing auto saving and loading
Structurefinancial: ## for Start up expenses costs
  actAs:
    Timestampable: ~
    Signable:
      created: { name: created_by, type: string, onUpdate: CASCADE, onDelete: SET NULL, options: {notnull: true, default: None}}
      updated: { name: updated_by, type: string }
  columns:
   business_plan: {type: integer, notnull: true}
   local_source: {type: integer, notnull: false}
   foreign_source: {type: integer, notnull: false}
   token: {type: string(255), notnull: false} 
  relations:
   InvestmentApplication: {local: business_plan, foreign: id , foreignAlias: StructureFinancial, onDelete: CASCADE}
Costs: ## for Investment Costs
  actAs:
    Timestampable: ~
    Signable:
      created: { name: created_by, type: string, onUpdate: CASCADE, onDelete: SET NULL, options: {notnull: true, default: None}}
      updated: { name: updated_by, type: string }
  columns:
   business_plan: {type: integer, notnull: true}
   year1: {type: integer, notnull: false}
   year2: {type: integer, notnull: false}
   year3: {type: integer, notnull: false}
   year4: {type: integer, notnull: false}
   year5: {type: integer, notnull: false}
   token: {type: string(255), notnull: false} 
  relations:
   InvestmentApplication: {local: business_plan, foreign: id , foreignAlias: BusinessPlanCosts, onDelete: CASCADE}
Startupexpenses: ## for Start up expenses costs
  actAs:
    Timestampable: ~
    Signable:
      created: { name: created_by, type: string, onUpdate: CASCADE, onDelete: SET NULL, options: {notnull: true, default: None}}
      updated: { name: updated_by, type: string }
  columns:
   business_plan: {type: integer, notnull: true}
   year1: {type: integer, notnull: false}
   year2: {type: integer, notnull: false}
   year3: {type: integer, notnull: false}
   year4: {type: integer, notnull: false}
   year5: {type: integer, notnull: false}
   token: {type: string(255), notnull: false} 
  relations:
   InvestmentApplication: {local: business_plan, foreign: id , foreignAlias: BusinessPlanStartup, onDelete: CASCADE}
Employementlocal: ## for employment local
 actAs:
    Timestampable: ~
    Signable:
      created: { name: created_by, type: string, onUpdate: CASCADE, onDelete: SET NULL, options: {notnull: true, default: None}}
      updated: { name: updated_by, type: string }
 columns:
  business_plan: {type: integer, notnull: true}
  year1: {type: integer, notnull: false}
  year2: {type: integer, notnull: false}
  year3: {type: integer, notnull: false}
  year4: {type: integer, notnull: false}
  year5: {type: integer, notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  InvestmentApplication: {local: business_plan, foreign: id , foreignAlias: EmploymentLocal, onDelete: CASCADE}
Employementforeign: ## for employment foreign
 actAs:
    Timestampable: ~
    Signable:
      created: { name: created_by, type: string, onUpdate: CASCADE, onDelete: SET NULL, options: {notnull: true, default: None}}
      updated: { name: updated_by, type: string }
 columns:
  business_plan: {type: integer, notnull: true}
  year1: {type: integer, notnull: false}
  year2: {type: integer, notnull: false}
  year3: {type: integer, notnull: false}
  year4: {type: integer, notnull: false}
  year5: {type: integer, notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  InvestmentApplication: {local: business_plan, foreign: id , foreignAlias: EmploymentForeign, onDelete: CASCADE}
Plannedperformance:
 actAs:
    Timestampable: ~
    Signable:
      created: { name: created_by, type: string, onUpdate: CASCADE, onDelete: SET NULL, options: {notnull: true, default: None}}
      updated: { name: updated_by, type: string }
 columns:
  business_plan: {type: integer, notnull: true}
  year1: {type: integer, notnull: false}
  year2: {type: integer, notnull: false}
  year3: {type: integer, notnull: false}
  year4: {type: integer, notnull: false}
  year5: {type: integer, notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  InvestmentApplication: {local: business_plan, foreign: id , foreignAlias: PlannedPerformanceApplication, onDelete: CASCADE}
##### We will create new tables for auto saving of users details. 
####
# Contains a summary of the application from the InvestmentApplication and Business Plan Tables
ProjectSummary:
 actAs:
  Timestampable: ~
  Signable: #to monitor the user editing and updating this record
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string} 
 columns:
  investment_id: {type: integer, notnull: true, unique: true}
  business_sector: {type: string(500), notnull: true}
  techinical_viability: {type: string(4000), notnull: true}
  planned_investment: {type: integer, notnull: true}
  employment_created: {type: integer, notnull: true}
  job_categories: {type: string(4000), notnull: true}
  token: {type: string(255), notnull: false} 
 relations:
  InvestmentApplication: {local:investment_id, foreign: id, foreignAlias: InvestmentSummary, onDelete: CASCADE }
#Table records the tasks assigned to a user, the status and user to whom the task is assigned to is recorded in this table   
TaskAssignment: 
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  user_assigned: {type: integer, notnull: true}
  investmentapp_id: {type: integer, notnull: true, unique: true }
  instructions: {type: string(1000), notnull: true}
  duedate: {type: timestamp, notnull: true}
  work_status: {type: string(255), notnull: true}
  token: {type: string(255), notnull: false} 
 relations:
  InvestmentApplication: {local: investmentapp_id, foreign: id, foreignAlias: ApplicationAssigment , onDelete: CASCADE}
  sfGuardUser: {local: user_assigned, foreign: id, foreignAlias: GuardDocumentAssignment}
#  sf_guard_user: {local: business_id, foreign: id, foreignAlias: InvestmentDocument}
BusinessApplicationStatus: # Shows business application status, pending,processing,accepted or rejected, payment,issuing,done
 actAs: {Timestampable: ~}
 columns:
  business_id: {type: integer, notnull:true}
  application_status: {type: string(255), notnull: true}
  comment: {type: string(255), notnull: false}
  percentage: {type: integer, notnull: true}
  token: {type: string(255), notnull: false} 
 relations:
  InvestmentApplication: {local: business_id, foreign: id, foreignAlias: InvestmentAppBusinesStatus, onDelete: CASCADE}
InvestmentRequests:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  requestor: {type: string(255), notnull: true}
  request_type: {type: string(255), notnull: true}
  status: {type: string(255), notnull: true}
  reference_number: {type: string(255), notnull: true, unique: true}
  comments: {type: string(1000), notnull: true}
  token: {type: string(255), notnull: false}
ApprovedApplications: # Shows approved businesses application
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  business_id: {type: integer, notnull: true}
  applicant_reference_number: {type: string(255), notnull: true, unique: true}
  business_registration: {type: integer, notnull:true}
  application_type: {type: string(255), notnull: true}
  comment: {type: string(255), notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  InvestmentApplication: {local: business_id, foreign: id, foreignAlias: InvestmentApprovedBusiness, onDelete: CASCADE}
RejectedApplications: # Shows rejected businesses application
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  business_id: {type: integer, notnull: true}
  applicant_reference_number: {type: string(255), notnull: true, unique: true}
  business_registration: {type: integer, notnull:true}
  application_type: {type: string(255), notnull: true}
  reasons: {type: string(1000), notnull: false}
  comments: {type: string(1000), notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  InvestmentApplication: {local: business_id, foreign: id, foreignAlias: InvestmentRejectedBusiness, onDelete: CASCADE}
##Used to simulate the user payment status from the financial business registration system
Payment:
 actAs:
  Timestampable: ~
  Signable: #to monitor the user editing and updating this record
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  business_id: {type: integer, notnull: true}
  payment_status: {type: string(255), notnull: true, default: notpaid}
  slip_number: {type: integer, notnull: true, unique: true}
  token: {type: string(255), notnull: false} 
# relations:
#  InvestmentApplication: {local: business_id, foreign:id , foreignAlias: InvestmentCertificate}  
## Records the certificates issued to the investor by the RDB staff after successful completion of Investment Certificate application  
InvestmentCertificate:
 actAs:
  Timestampable: ~
  Signable: #to monitor the user editing and updating this record
   created: { name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  serial_number: {type: integer, notnull: true, unique: true}
  business_id: {type: integer, notnull: true, unique: true}
  token: {type: string(255), notnull: false} 
 relations:
  InvestmentApplication: {local: business_id, foreign:id , foreignAlias: InvestmentCertificate, onDelete: CASCADE}
####################################### End Investment Certificate Registration Tables ##############################
#################################################
########################################### Start EIA Certificate Application Process Tables ##########################
### Record The User applying for the EIA Certificate
#### We will Redesign the database models for the EIA
### Project Details Table
EIAProjectDetail:
 actAs:
  Timestampable: ~
  Signable: #to monitor the user editing and updating this record
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  project_reference_number: {type: string(255), notnull: true, unique: true}
  project_title: {type: string(255), notnull: true}
  project_plot_number: {type: string(255), notnull: false}
  village: {type: string(255), notnull: false}
  cell: {type: string(255), notnull: false}
  sector: {type: string(255), notnull: false}
  district: {type: string(255), notnull: false}
  province: {type: string(255), notnull: false}
  name: {type: string(255), notnull: false}
  token: {type: string(255), notnull: false} 
EIAProjectDeveloper: ##Details of the Developer
  actAs:
   Timestampable: ~
   Signable: #to monitor the user editing and updating this record
    created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
    updated: { name: updated_by,type: string}
  columns:
   eiaproject_id: {type: integer, notnull: true, unique: true}
   developer_name: {type: string(255), notnull: true}
   contact_person: {type: string(255), notnull: true}
   address: {type: string(255), notnull: false}
   telephone: {type: string(255), notnull: false}
   mobile_phone: {type: string(255), notnull: false}
   email_address: {type: string(255), notnull: true}
   communication_mode: { type: string(255), notnull: false}
   social_media_account: {type: string(255), notnull: false}
   token: {type: string(255), notnull: false} 
  relations:
   EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: EIAProjectDeveloperDetails }
EIAProjectDescription: ## Project Description
 actAs:
  Timestampable: ~
  Signable: #to monitor the user editing and updating this record
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true, unique: true}
  project_nature: {type: string(255), notnull: true}
  project_objective: {type: string(1000), notnull: true}
  project_total_cost: {type: integer, notnull: true}
  project_working_capital: {type: integer, notnull: true}
  total_land_area: {type: integer, notnull: true}
  existing_land_use: {type: integer, notnull: false}
  site_location_developed_area: {type: boolean, notnull: false }
  site_location_undeveloped_area: {type: boolean, notnull: false }
  site_location_other: {type: boolean, notnull: false }
  site_location_other_specify: {type: string(400),notnull: false }
  land_use_residential: {type: boolean,notnull: false }
  land_use_industrial: {type: boolean,notnull: false }
  land_use_tourism: {type: boolean,notnull: false }
  land_use_commercial: {type: boolean,notnull: false }
  land_use_instituational: {type: boolean,notnull: false }
  land_use_openspace: {type: boolean,notnull: false }
  land_use_other: {type: boolean,notnull: false }
  land_use_other_specify: {type: string(1000),notnull: false }
  project_components: {type: string(1000),notnull: false }
  project_activities: {type: string(1000),notnull: false }
  water_demand_during_implementation: {type: integer, notnull: false}
  water_demand_during_operation: {type: integer, notnull: false}
  public_water_supply: {type: boolean, notnull: false }
  water_treatment: {type: boolean ,notnull: false }
  sewage_system: {type: boolean,notnull: false }
  sewage_system_modern: {type: boolean, notnull: false }
  sewage_system_ecosan: {type: boolean, notnull: false }
  sewage_system_biogas: {type: boolean, notnull: false }
  sewage_system_other: {type: boolean,notnull: false }
  sewage_system_other_specify: {type: string(255),notnull: false }
  sewage_system_capacity: {type: integer, notnull: false}
  power_supply_local_electricity: {type: boolean, notnull: false }
  power_supply_own_generator: {type: boolean ,notnull: false }
  power_supply_local_electricity_size: {type: integer,notnull: false }
  power_supply_own_generator_capacity: {type: integer,notnull: false }
  power_supply_other: {type: boolean, notnull: false }
  power_supply_other_specify: {type: string(400),notnull: false }
  solid_waste_ecological: {type: boolean, notnull: false }
  solid_waste_dumpsite: {type: boolean, notnull: false }
  solid_waste_municipal: {type: boolean, notnull: false }
  solid_waste_others: {type: boolean, notnull: false }
  solid_waste_others_specify: {type: string(1000), notnull: false }
  man_power_employment_implementation: {type: integer, notnull: false}
  man_power_employment_operation: {type: integer, notnull: false}
  implementation_duration: {type: integer, notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: EIAProjectDetailsDescription }
EIAProjectSurrounding: ## For recording project sorroundings
 actAs:
  Timestampable: ~
  Signable: #to monitor the user editing and updating this record
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true, unique: true}
  project_general_elevation: {type: integer, notnull: false}
  soil_erosion: {type: boolean, notnull: false}
  soil_erosion_heavy_rains: {type: boolean, notnull: false}
  soil_erosion_unstable: {type: boolean, notnull: false}
  soil_erosion_others: {type: boolean, notnull: false}
  soil_erosion_others_specify: {type: string(255), notnull: false}
  existing_water_body: {type: boolean, notnull: false}
  existing_water_body_remark: {type: string(255), notnull: false}
  access_road: {type: boolean, notnull: false}
  access_road_distance: {type: integer, notnull: false}
  access_road_type: {type: string(255), notnull: false}
  site_conform_approval: {type: boolean, notnull: false}
  site_conform_remark: {type: string(255), notnull: false}
  site_existing_structure: {type: boolean, notnull: false}
  site_existing_remark: {type: string(255), notnull: false}
  land_use_agriculture: {type: boolean, notnull: false}
  land_use_grassland: {type: boolean, notnull: false}
  land_use_builtup: {type: boolean, notnull: false}
  land_use_marshland: {type: boolean, notnull: false}
  land_use_other: {type: boolean, notnull: false}
  land_use_other_specify: {type: string(255), notnull: false}
  existing_trees: {type: boolean, notnull: false}
  existing_trees_remark: {type: string(255), notnull: false}
  wildlife_existing: {type: boolean, notnull: false}
  wildlife_existing_remark: {type: string(255), notnull: false}
  fishery_existing: {type: boolean, notnull: false}
  fishery_existing_remark: {type: string(255), notnull: false}
  watershed_existing: {type: boolean, notnull: false}
  watershed_near_distance: {type: integer, notnull: false}
  watershed_near_distance_units: {type: string, notnull: false }
  watershed_within_name: {type: string(255), notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: EIAProjectDetailSurrounding }
EIAProjectSurroundingSpecies: ## For project sorrounding species record
 actAs:
  Timestampable: ~
  Signable: #to monitor the user editing and updating this record
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  project_surrounding_id: {type: integer, notnull: true, unique: true}
  birds_animals: {type: string(255), notnull: false}
  trees_vegetation: {type: string(255), notnull: false}
  fisheries: {type: string(255), notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectSurrounding: {local: project_surrounding_id, foreign: id, foreignAlias: EIAProjectSurroundingSpecies }
EIAProjectSocialEconomic: ## Records social economic impact
 actAs:
  Timestampable: ~
  Signable: #to monitor the user editing and updating this record
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true, unique: true}
  existing_settlements: {type: boolean, notnull: false}
  existing_settlements_remark: {type: string(800), notnull: false}
  average_family_size: {type: integer, notnull: false}
  average_family_size_remark: {type: string(800), notnull: false}
  livelihood_farming: {type: boolean, notnull: false}
  livelihood_fishing: {type: boolean, notnull: false}
  livelihood_vending: {type: boolean, notnull: false}
  livelihood_others: {type: boolean, notnull: false}
  livelihood_others_specify: {type: string(1000), notnull: false}
  livelihood_remarks: {type: string(1000), notnull: false}
  local_organization: {type: boolean, notnull: false}
  local_organization_description: {type: string(1000), notnull: false}
  social_infrastructures: {type: boolean, notnull: false}
  social_schools: {type: boolean, notnull: false}
  social_health_centers: {type: boolean, notnull: false}
  social_hospital: {type: boolean, notnull: false}
  social_transportation: {type: boolean, notnull: false}
  social_communication: {type: boolean, notnull: false}
  social_churches: {type: boolean, notnull: false}
  social_roads: {type: boolean, notnull: false}
  social_others: {type: boolean, notnull: false}
  social_others_specify: {type: string(1000), notnull: false}
  token: {type: string(255), notnull: false}
 relations:
  EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: EIAProjectDetailSocialEconomic }
EIAProjectImpactMeasures: ## Project Impact Measures
 actAs:
  Timestampable: ~
  Signable: #to monitor the user editing and updating this record
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true, unique: true}
  dust_generation: {type: boolean, notnull: false}
  dust_generation_watering: {type: boolean, notnull: false}
  dust_generation_remove_soil: {type: boolean, notnull: false}
  dust_generation_hauling_trucks: {type: boolean, notnull: false}
  dust_generation_temporary_fence: {type: boolean, notnull: false}
  dust_generation_remarks: {type: string(1000), notnull: false}
  soil_removal: {type: boolean, notnull: false}  
  soil_removal_mitigate_stockpile: {type: boolean, notnull: false}
  soil_removal_mitigate_revegetate: {type: boolean, notnull: false}
  soil_removal_remarks: {type: string(1000), notnull: false}
  erosion_from_cuts: {type: boolean, notnull: false}
  erosion_mitigate_construct_dryseason: {type: boolean, notnull: false}
  erosion_mitigate_avoid_exposure: {type: boolean, notnull: false}
  erosion_mitigate_barrier_nets: {type: boolean, notnull: false}
  erosion_remarks: {type: string(1000), notnull: false}
  sedimentation: {type: boolean, notnull: false}
  sedimentation_mitigate_silt_trap: {type: boolean, notnull: false}
  sedimentation_mitigate_proper_stockpilling: {type: boolean, notnull: false}
  sedimentation_mitigate_filling_materials: {type: boolean, notnull: false}
  sedimentation_remarks: {type: string(1000), notnull: false} 
  pollution: {type: boolean, notnull: false}
  pollution_mitigate_temporary_disposal: {type: boolean, notnull: false}
  pollution_mitigate_toilet_facilities: {type: boolean, notnull: false}
  pollution_mitigate_contract_observe: {type: boolean, notnull: false}
  pollution_remarks: {type: string(1000), notnull: false}  
  vegetation_loss: {type: boolean, notnull: false}
  vegetation_limit_clearing: {type: boolean, notnull: false}
  vegetation_provide_clearing: {type: boolean, notnull: false}
  vegetation_use_markers: {type: boolean, notnull: false}
  vegetation_replant: {type: boolean, notnull: false}
  vegetation_remarks: {type: string(1000), notnull: false}
  disturbance: {type: boolean, notnull: false}
  disturbance_reestablish: {type: boolean, notnull: false}
  disturbance_schedule: {type: boolean, notnull: false}
  disturbance_maintenance: {type: boolean, notnull: false}
  disturbance_remarks: {type: string(1000), notnull: false}
  noise_generation: {type: boolean, notnull: false}
  nosie_generation_schedule: {type: boolean, notnull: false}
  noise_generation_undertake: {type: boolean, notnull: false}
  noise_generation_remark: {type: string(1000), notnull: false}
  generation_employment: {type: boolean, notnull: false}
  generation_employment_hiring: {type: boolean, notnull: false}
  generation_employment_remarks: {type: string(1000), notnull: false}
  conflicts: {type: boolean, notnull: false}
  conflict_conslutation: {type: boolean, notnull: false}
  conflict_remarks: {type: string(1000), notnull: false}
  traffic_congestion: {type: boolean, notnull: false}
  traffic_rules_adherance: {type: boolean, notnull: false}
  traffice_aid_provision: {type: boolean, notnull: false}
  traffic_congestion_remarks: {type: string(1000), notnull: false}
  crimes_accidents: {type: boolean, notnull: false}
  crimes_accidents_safety_rules: {type: boolean, notnull: false}
  crime_accidents_remarks: {type: boolean, notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: EIAProjectDetailImpactMeasures }
EIAProjectOperationPhase: ## For project operation phase
 actAs:
  Timestampable: ~
  Signable: #to monitor the user editing and updating this record
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true, unique: true}
  domestic_influence: {type: boolean, notnull: false}
  domestic_wastewater_treatment: {type: boolean, notnull: false}
  domestic_influence_remarks: {type: string(1000), notnull: false}
  solid_wastes: {type: boolean, notnull: false}
  solid_wastes_segregation: {type: boolean, notnull: false}
  solid_wastes_proper_collection: {type: boolean, notnull: false}
  solid_wastes_proper_housekeeping: {type: boolean, notnull: false}
  solid_wastes_remarks: {type: string(1000), notnull: false}
  increased_traffic: {type: boolean, notnull: false}
  increased_traffic_rules_adhere: {type: boolean, notnull: false}
  increased_traffic_signables: {type: boolean, notnull: false}
  increased_traffice_remarks:  {type: string(1000), notnull: false}
  fire_risk: {type: boolean, notnull: false}
  fire_risk_extinguishers: {type: boolean, notnull: false}
  fire_risk_exit_stairs: {type: boolean, notnull: false}
  fire_risk_remarks:  {type: string(1000), notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: EIAProjectDetailOperationPhase }
EIAProjectAttachment: ## for any attachment for a particula submitted application
 actAs:
  Timestampable: ~
  Signable: #to monitor the user editing and updating this record
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true, unique: true}
  panoramic_view:  {type: string(255), notnull: false}
  perspective_site_impact:  {type: string(255), notnull: false}
  preliminary_approval:  {type: string(255), notnull: true}
  land_ownership_doc:  {type: string(255), notnull: false}
  ministrial_document:  {type: string(255), notnull: false}
  perimeter_area_map:  {type: string(255), notnull: false}
  location_area_map:  {type: string(255), notnull: false}
  other_supporting_document:  {type: string(255), notnull: false}
  project_reference_number: {type: string(255), notnull:false}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: EIAProjectDetailAttachment }
## Track the status of EIA Application   
EIApplicationStatus:
 actAs:
  Timestampable: ~
 columns:
  eiaproject_id: {type: integer, notnull: true}
  application_status: {type: string(255), notnull: true}
  comments: {type: string(255), notnull: true}
  percentage: {type: integer, notnull: true}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local:eiaproject_id, foreign: id, foreignAlias: EIApplicationStatus, onDelete:CASCADE }
EIAProjectBriefDecision: ## Allow the data admin to reject the applications immediately after submission if project is a risk or illegal 
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true, unique: true}
  decision: {type: string(255), notnull: true}
  comments: {type: string(255), notnull: true}
  processed_by: {type: integer, notnull: true}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: ApplicationBriefDecision , onDelete: CASCADE}
  sfGuardUser: {local: processed_by, foreign: id, foreignAlias: GuardBriefDecision}  
#### Record the user who has been assigned the task of processing this application
EITaskAssignment: 
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  user_assigned: {type: integer, notnull: true}
  eiaproject_id: {type: integer, notnull: true }
  instructions: {type: string(255), notnull: true}
  duedate: {type: date, notnull: true}
  work_status: {type: string(255), notnull: true}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: ApplicationAssigment , onDelete: CASCADE}
  sfGuardUser: {local: user_assigned, foreign: id, foreignAlias: GuardEIAssignment}  
#Records site visit day
EIASiteVisit:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true, unique: true}
  site_visit: {type: date, notnull: true}
  remarks: {type: string(255), notnull: false}
  visited: {type: boolean, notnull: false}
  token: {type: string(255), notnull: false}
 relations:
  EIAProjectDetail: {local:eiaproject_id, foreign: id, foreignAlias: EiaSiteVisit, onDelete:CASCADE } 
EIASiteVisitReport:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiasitevisit_id: { type: integer , notnull: true, unique: true}
  report: { type: string(400) ,notnull: true}
  token: {type: string(255), notnull: false}
 relations:
  EIASiteVisit: {local:eiasitevisit_id, foreign: id, foreignAlias: EIASiteVisitReport, onDelete:CASCADE } 
#### Record the EIA Project Impact level, L1, L2 or L3
ProjectImpact:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true, unique: true}
  impact_level: {type: string, notnull: true}
  comments: {type: string(400), notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local:eiaproject_id, foreign: id, foreignAlias: EIAProjectImpact, onDelete:CASCADE } 
#table to approve/reject requeted assessments  
EIAAssessmentDecision:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  taskassignment_id: {type: integer, notnull: true}
  eia_stage: {type: string, notnull: true}
  verdict: {type: string, notnull: true }
  remarks: {type: string(255), notnull: false }
  token: {type: string(255), notnull: false} 
 relations:
  EITaskAssignment: {local:taskAssignment_id, foreign: id, foreignAlias: EiaAssessmentDecision, onDelete:CASCADE } 
EIAProjectImpactPass: ## This table will store all project that do not require issuance of EIACertificate
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true}
  processed_by: {type: integer, notnull: true}
  letter_status: {type: integer, notnull: true}
  comments: {type: string(255), notnull: true}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: ApplicationImpactPass , onDelete: CASCADE}
  sfGuardUser: {local: processed_by, foreign: id, foreignAlias: GuardImpactPass}   
#### These are reference instructions used by applicant to come up with EI Report and submitt it when done 
Tor:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true} 
  issues_assessed: {type: string(400), notnull: true}
  specific_tasks: {type: string(400), notnull: true}
  stake_holders: {type: string(400), notnull: true}
  experts: {type: string(400), notnull: true}
  token: {type: string(255), notnull: false} 
 relations:
   EIAProjectDetail: {local:eiaproject_id, foreign: id, foreignAlias: EIAProjectImpact, onDelete:CASCADE }  
EIATorStatus: ## Stores details about tor, if sent to the client or not if project qualifies for EIA certificate
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true}
  sent_by: {type: integer, notnull: true}
  comments: {type: string(255), notnull: true}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: ApplicationTorStatus , onDelete: CASCADE}
  sfGuardUser: {local: sent_by, foreign: id, foreignAlias: GuardTorStatus}   
#### Allow a user to upload word and pdf documents after they are done with implementing TOR requirements
EIReport:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true, unique: true}
  word_doc: {type: string(255), notnull: true}
  pdf_doc: {type: string(255), notnull: true}
  status: {type: string(255), notnull: true}
  comments: {type: string(1000), notnull: false}
  token: {type: string(255), notnull: false} 
 relations:
  EIAProjectDetail: {local:eiaproject_id, foreign: id, foreignAlias: EIAStudyUploads, onDelete:CASCADE } 
EIReportResubmission:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eiaproject_id: {type: integer, notnull: true, unique: true}
  status: {type: string(255), notnull: true}
  comments: {type: string(10000}, notnull: true}
  commets_doc: {type: string(255), notnull: true}
EIComments: ## We allow the data admin to attach documents he/she has processed and send copies to manager
  actAs:
   Timestampable: ~
   Signable:
    created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
    updated: { name: updated_by,type: string}
  columns:
   eiaproject_id: {type: integer, notnull: true, unique: true}
   eir_document_commented: {type: string(255), notnull: false}
   processed_by: {type: integer, notnull: true}
   token: {type: string(255), notnull: false} 
  relations:
   EIAProjectDetail: {local: eiaproject_id, foreign: id, foreignAlias: EIApplicationComments , onDelete: CASCADE}
   sfGuardUser: {local: processed_by, foreign: id, foreignAlias: GuardComments}  
EIApplicationDecision: ##
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  eireport_id: {type: integer, notnull: true}
  status: {type: string(255), notnull: true}
  comments: {type: string(255), notnull: true}
  token: {type: string(255), notnull: false} 
 relations:
  EIReport: {local:eireport_id, foreign: id, foreignAlias: StudyDecision, onDelete:CASCADE } 
EIApplicationCertificatePermission: ## Allow data admins to send request permission for issuance of certs
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  send_to: {type: integer, notnull: true}
  sent_by: {type: integer, notnull: true}
  message: {type: string(255), notnull: true}
  eireport_id: {type: integer, notnull: true}
  token: {type: string(255), notnull: false} 
 relations:
  EIReport: {local:eireport_id, foreign: id, foreignAlias: DataAdminPermissionRequest, onDelete:CASCADE }
### Record the EIA Certificate
EIACertificate:
 actAs:
  Timestampable: ~
 columns:
  serial_number: {type: integer, notnull: true, unique: true}
  eireport_id: {type: integer, notnull: true, unique: true}
  token: {type: string(255), notnull: false} 
 relations:
  EIReport: {local:eireport_id, foreign: id, foreignAlias: DataAdminPermissionRequest, onDelete:CASCADE }
############################ End EIA Certificate Application Process Tables ###############################
Messages:
 actAs: {Timestampable: ~}
 columns:
  sender: {type: string(255), notnull: true}
  recepient: {type: string(255), notnull: true}
<<<<<<< HEAD
  message_subject: {type: string(255), notnull: false}
  message: {type: string(4000), notnull: true}
=======
  sender_email: {type: string(255), notnull: false}
  recepient_email: {type: string(255), notnull: false}
  cc_email: {type: string(255), notnull: false}
  message_subject: {type: string(255), notnull: false}
  message: {type: string(10000), notnull: true}
>>>>>>> 8a45578a6c5c1cbed13662effd99c1202e646474
  attachement: {type: string(255), notnull: true}
  token: {type: string(255), notnull: false} 
Notifications:
 actAs: {Timestampable: ~}
 columns:
  recepient: {type: string(255), notnull: true}
  message: {type: string(4000), notnull: true}
  token: {type: string(255), notnull: false} 
############################## End ############################################################
Session: ## Table is used to store sessions for frontend and backend applications
 columns:
  id: { type: string(32), primary: true, notnull: true }
  sessiondata: { type: string(4000), notnull: true }
  time: { type: integer(4), notnull: true }
  token: {type: string(255), notnull: false} 
###### A Table to Simulate Business Registration System, we use it to confirm if a Business is Registered.
BusinessRegistration:
 actAs: {Timestampable: ~}
 columns:
  business_name: {type: string(255), notnull: true}
  business_regno: {type: string(255), notnull: true}
  business_sector: {type: string(255), notnull: true}
  office_telephone: {type: string(255), notnull: true}
  fax: {type: string(255), notnull: true}
  post_box: {type: string(255), notnull: true}
  location: {type: string(255), notnull: true}
  sector: {type: string(255), notnull: true}
  district: {type: string(255), notnull: true}
  city_province: {type: string(255), notnull: true}
  token: {type: string(255), notnull: false} 
###### Table used to Add more information for user profile
sfGuardUserProfile:
 actAs: {Timestampable: ~}
 columns:
  user_id: { type: integer , notnull: true}
  salutation: { type: string(255), notnull: true }
  citizenship: { type: string(255), notnull: true }
  surname: { type: string(255), notnull: true }
  phone_number: { type: string(255), notnull: true } 
  id_passport: { type: string(255), notnull: true }
 relations:
  User:
   class: sfGuardUser
   local: user_id
   foreign: id
   type: one
   foreignType: one
   foreignAlias: Profile
Portlets:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  investment_certificate: {type: string(7000), notnull: true}
  eia_certificate: {type: string(7000), notnull: true}
  tax_exemptions: {type: string(7000), notnull: true}
  token: {type: string(255), notnull: false} 
###### Tax Exemption Processing #######
##Table to store tax exemption details
TaxExemptionDetails:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  office_name: {type: string(255), notnull: false}
  office_code: {type: string(255), notnull: false}
  company_name: {type: string(255), notnull: false}
  investment_certificate: {type: string(255), notnull: false}
  company_tin: {type: integer, notnull: false}
  declarant_name: {type: string(255), notnull: false}
  declarant_reference: {type: string(255), notnull: false}
  declarant_code: {type: string(255), notnull: false}
  electronic_request_number: {type: string(255), notnull: false}
  electronic_authrization_number: {type: string(255), notnull: false}
  customs_declaration_reference: {type: string(255), notnull: false}
  revenue_officer: {type: string(255), notnull: false}
  revenue_officer_e_verification_date: {type: timestamp, notnull: false}
  revenue_officer_remarks: {type: string(1000), notnull: false}
  rdb_officer_remarks: {type: string(1000), notnull: false}
  status: {type: string(255), notnull: false}
### Table to Store tax exemption items
TaxExemptionItems:
 actAs:
  Timestampable: ~
  Signable:
   created:{ name: created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}
   updated: { name: updated_by,type: string}
 columns:
  tax_details_id: {type: integer, notnull: true}
  rdb: {type: boolean, notnull: false}
  rra: {type: boolean, notnull: false}
  hs_code: {type: integer, notnull: false}
  description: {type: string(600), notnull: false}
  cif: {type: integer, notnull: false}
  quantity: {type: integer, notnull: false}
  import_duties: {type: integer, notnull: false}
 relations:
  TaxExemptionDetails: {local: tax_details_id, foreign: id, foreignAlias: TaxDetailsItems, onDelete: CASCADE}
