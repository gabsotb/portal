<?php

/**
 * EIApplication
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class EIApplication extends BaseEIApplication
{
   //method to count active applications
  public function countEIApplications(Doctrine_Query $q = null)  
  {
   return $this->addActiveApplications($q)->count();
  }
  //execute query
  public function addActiveEIApplications(Doctrine_Query $q = null)
  {
    $userid = sfContext::getInstance()->getUser()->getGuardUser()->getId(); // get the username of the user logged
    if(is_null($q))
	{
	 $q = Doctrine_Query::create()
	 ->from('EIApplication a')
	 ->addWhere('a.user_id', $userid);
	 $q->execute();
	 
	}
	return $q;
  }
  
	public function validateBusiness($name, $regno)
	{
	   $query = Doctrine_Manager::getInstance()->getCurrentConnection()->fetchAssoc("SELECT * FROM business_registration WHERE business_name = '$name'
	   AND business_regno = '$regno'");
	  // print_r($query); exit;
	   return $query;
	}
	
	public function save(Doctrine_Connection $conn = null)
	  {
	   $conn = $conn ? $conn : $this->getTable()->getConnection();
	   $conn->beginTransaction();
			  try
			  {
				
				  $name = $this->getDeveloperName();  
				  ///
					$ret = parent::save($conn);
					$conn->commit();
					$this->saveStatus($name);
					return $ret ;
				
			  }
			  catch(Exception $e)
			  {
			  $conn->rollBack();
			  throw $e;
			  }
	  }
	  
	  public function saveStatus($name)
		{
		    $id= Doctrine_Core::getTable('EIApplication')->getId($name);
			$status = new EIApplicationStatus();
			$status->company_id = $id;
			$status->application_status= "Submitted";
			$status->comments="Documents Submitted Successfuly. Awaiting RDB admin to assign your application to a Staff";
			$status->percentage="10";
			$status->save(); 
		}
		
	public function getStatus()
	{	
		$eia= Doctrine_Core::getTable('EIApplication')->getEia();
		return Doctrine_Core::getTable('EIApplicationStatus')->getStatus($eia['id']);
	}
}