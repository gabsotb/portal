<?php

/**
 * BaseEIAProjectDescription
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $eiaproject_id
 * @property string $project_nature
 * @property string $project_objective
 * @property integer $project_total_cost
 * @property integer $project_working_capital
 * @property integer $total_land_area
 * @property string $existing_land_use
 * @property boolean $site_location_developed_area
 * @property boolean $site_location_undeveloped_area
 * @property boolean $site_location_other
 * @property string $site_location_other_specify
 * @property boolean $land_use_residential
 * @property boolean $land_use_industrial
 * @property boolean $land_use_tourism
 * @property boolean $land_use_commercial
 * @property boolean $land_use_instituational
 * @property boolean $land_use_openspace
 * @property boolean $land_use_other
 * @property string $land_use_other_specify
 * @property string $project_components
 * @property string $project_activities
 * @property integer $water_demand_during_implementation
 * @property integer $water_demand_during_operation
 * @property boolean $public_water_supply
 * @property boolean $water_treatment
 * @property boolean $sewage_system
 * @property boolean $sewage_system_modern
 * @property boolean $sewage_system_ecosan
 * @property boolean $sewage_system_biogas
 * @property boolean $sewage_system_other
 * @property string $sewage_system_other_specify
 * @property integer $sewage_system_capacity
 * @property boolean $power_supply_local_electricity
 * @property boolean $power_supply_own_generator
 * @property integer $power_supply_local_electricity_size
 * @property integer $power_supply_own_generator_capacity
 * @property boolean $power_supply_other
 * @property string $power_supply_other_specify
 * @property boolean $solid_waste_ecological
 * @property boolean $solid_waste_dumpsite
 * @property boolean $solid_waste_municipal
 * @property boolean $solid_waste_others
 * @property string $solid_waste_others_specify
 * @property integer $man_power_employment_implementation
 * @property integer $man_power_employment_operation
 * @property integer $implementation_duration
 * @property string $token
 * @property string $resubmit
 * @property EIAProjectDetail $EIAProjectDetail
 * 
 * @method integer               getEiaprojectId()                        Returns the current record's "eiaproject_id" value
 * @method string                getProjectNature()                       Returns the current record's "project_nature" value
 * @method string                getProjectObjective()                    Returns the current record's "project_objective" value
 * @method integer               getProjectTotalCost()                    Returns the current record's "project_total_cost" value
 * @method integer               getProjectWorkingCapital()               Returns the current record's "project_working_capital" value
 * @method integer               getTotalLandArea()                       Returns the current record's "total_land_area" value
 * @method string                getExistingLandUse()                     Returns the current record's "existing_land_use" value
 * @method boolean               getSiteLocationDevelopedArea()           Returns the current record's "site_location_developed_area" value
 * @method boolean               getSiteLocationUndevelopedArea()         Returns the current record's "site_location_undeveloped_area" value
 * @method boolean               getSiteLocationOther()                   Returns the current record's "site_location_other" value
 * @method string                getSiteLocationOtherSpecify()            Returns the current record's "site_location_other_specify" value
 * @method boolean               getLandUseResidential()                  Returns the current record's "land_use_residential" value
 * @method boolean               getLandUseIndustrial()                   Returns the current record's "land_use_industrial" value
 * @method boolean               getLandUseTourism()                      Returns the current record's "land_use_tourism" value
 * @method boolean               getLandUseCommercial()                   Returns the current record's "land_use_commercial" value
 * @method boolean               getLandUseInstituational()               Returns the current record's "land_use_instituational" value
 * @method boolean               getLandUseOpenspace()                    Returns the current record's "land_use_openspace" value
 * @method boolean               getLandUseOther()                        Returns the current record's "land_use_other" value
 * @method string                getLandUseOtherSpecify()                 Returns the current record's "land_use_other_specify" value
 * @method string                getProjectComponents()                   Returns the current record's "project_components" value
 * @method string                getProjectActivities()                   Returns the current record's "project_activities" value
 * @method integer               getWaterDemandDuringImplementation()     Returns the current record's "water_demand_during_implementation" value
 * @method integer               getWaterDemandDuringOperation()          Returns the current record's "water_demand_during_operation" value
 * @method boolean               getPublicWaterSupply()                   Returns the current record's "public_water_supply" value
 * @method boolean               getWaterTreatment()                      Returns the current record's "water_treatment" value
 * @method boolean               getSewageSystem()                        Returns the current record's "sewage_system" value
 * @method boolean               getSewageSystemModern()                  Returns the current record's "sewage_system_modern" value
 * @method boolean               getSewageSystemEcosan()                  Returns the current record's "sewage_system_ecosan" value
 * @method boolean               getSewageSystemBiogas()                  Returns the current record's "sewage_system_biogas" value
 * @method boolean               getSewageSystemOther()                   Returns the current record's "sewage_system_other" value
 * @method string                getSewageSystemOtherSpecify()            Returns the current record's "sewage_system_other_specify" value
 * @method integer               getSewageSystemCapacity()                Returns the current record's "sewage_system_capacity" value
 * @method boolean               getPowerSupplyLocalElectricity()         Returns the current record's "power_supply_local_electricity" value
 * @method boolean               getPowerSupplyOwnGenerator()             Returns the current record's "power_supply_own_generator" value
 * @method integer               getPowerSupplyLocalElectricitySize()     Returns the current record's "power_supply_local_electricity_size" value
 * @method integer               getPowerSupplyOwnGeneratorCapacity()     Returns the current record's "power_supply_own_generator_capacity" value
 * @method boolean               getPowerSupplyOther()                    Returns the current record's "power_supply_other" value
 * @method string                getPowerSupplyOtherSpecify()             Returns the current record's "power_supply_other_specify" value
 * @method boolean               getSolidWasteEcological()                Returns the current record's "solid_waste_ecological" value
 * @method boolean               getSolidWasteDumpsite()                  Returns the current record's "solid_waste_dumpsite" value
 * @method boolean               getSolidWasteMunicipal()                 Returns the current record's "solid_waste_municipal" value
 * @method boolean               getSolidWasteOthers()                    Returns the current record's "solid_waste_others" value
 * @method string                getSolidWasteOthersSpecify()             Returns the current record's "solid_waste_others_specify" value
 * @method integer               getManPowerEmploymentImplementation()    Returns the current record's "man_power_employment_implementation" value
 * @method integer               getManPowerEmploymentOperation()         Returns the current record's "man_power_employment_operation" value
 * @method integer               getImplementationDuration()              Returns the current record's "implementation_duration" value
 * @method string                getToken()                               Returns the current record's "token" value
 * @method string                getResubmit()                            Returns the current record's "resubmit" value
 * @method EIAProjectDetail      getEIAProjectDetail()                    Returns the current record's "EIAProjectDetail" value
 * @method EIAProjectDescription setEiaprojectId()                        Sets the current record's "eiaproject_id" value
 * @method EIAProjectDescription setProjectNature()                       Sets the current record's "project_nature" value
 * @method EIAProjectDescription setProjectObjective()                    Sets the current record's "project_objective" value
 * @method EIAProjectDescription setProjectTotalCost()                    Sets the current record's "project_total_cost" value
 * @method EIAProjectDescription setProjectWorkingCapital()               Sets the current record's "project_working_capital" value
 * @method EIAProjectDescription setTotalLandArea()                       Sets the current record's "total_land_area" value
 * @method EIAProjectDescription setExistingLandUse()                     Sets the current record's "existing_land_use" value
 * @method EIAProjectDescription setSiteLocationDevelopedArea()           Sets the current record's "site_location_developed_area" value
 * @method EIAProjectDescription setSiteLocationUndevelopedArea()         Sets the current record's "site_location_undeveloped_area" value
 * @method EIAProjectDescription setSiteLocationOther()                   Sets the current record's "site_location_other" value
 * @method EIAProjectDescription setSiteLocationOtherSpecify()            Sets the current record's "site_location_other_specify" value
 * @method EIAProjectDescription setLandUseResidential()                  Sets the current record's "land_use_residential" value
 * @method EIAProjectDescription setLandUseIndustrial()                   Sets the current record's "land_use_industrial" value
 * @method EIAProjectDescription setLandUseTourism()                      Sets the current record's "land_use_tourism" value
 * @method EIAProjectDescription setLandUseCommercial()                   Sets the current record's "land_use_commercial" value
 * @method EIAProjectDescription setLandUseInstituational()               Sets the current record's "land_use_instituational" value
 * @method EIAProjectDescription setLandUseOpenspace()                    Sets the current record's "land_use_openspace" value
 * @method EIAProjectDescription setLandUseOther()                        Sets the current record's "land_use_other" value
 * @method EIAProjectDescription setLandUseOtherSpecify()                 Sets the current record's "land_use_other_specify" value
 * @method EIAProjectDescription setProjectComponents()                   Sets the current record's "project_components" value
 * @method EIAProjectDescription setProjectActivities()                   Sets the current record's "project_activities" value
 * @method EIAProjectDescription setWaterDemandDuringImplementation()     Sets the current record's "water_demand_during_implementation" value
 * @method EIAProjectDescription setWaterDemandDuringOperation()          Sets the current record's "water_demand_during_operation" value
 * @method EIAProjectDescription setPublicWaterSupply()                   Sets the current record's "public_water_supply" value
 * @method EIAProjectDescription setWaterTreatment()                      Sets the current record's "water_treatment" value
 * @method EIAProjectDescription setSewageSystem()                        Sets the current record's "sewage_system" value
 * @method EIAProjectDescription setSewageSystemModern()                  Sets the current record's "sewage_system_modern" value
 * @method EIAProjectDescription setSewageSystemEcosan()                  Sets the current record's "sewage_system_ecosan" value
 * @method EIAProjectDescription setSewageSystemBiogas()                  Sets the current record's "sewage_system_biogas" value
 * @method EIAProjectDescription setSewageSystemOther()                   Sets the current record's "sewage_system_other" value
 * @method EIAProjectDescription setSewageSystemOtherSpecify()            Sets the current record's "sewage_system_other_specify" value
 * @method EIAProjectDescription setSewageSystemCapacity()                Sets the current record's "sewage_system_capacity" value
 * @method EIAProjectDescription setPowerSupplyLocalElectricity()         Sets the current record's "power_supply_local_electricity" value
 * @method EIAProjectDescription setPowerSupplyOwnGenerator()             Sets the current record's "power_supply_own_generator" value
 * @method EIAProjectDescription setPowerSupplyLocalElectricitySize()     Sets the current record's "power_supply_local_electricity_size" value
 * @method EIAProjectDescription setPowerSupplyOwnGeneratorCapacity()     Sets the current record's "power_supply_own_generator_capacity" value
 * @method EIAProjectDescription setPowerSupplyOther()                    Sets the current record's "power_supply_other" value
 * @method EIAProjectDescription setPowerSupplyOtherSpecify()             Sets the current record's "power_supply_other_specify" value
 * @method EIAProjectDescription setSolidWasteEcological()                Sets the current record's "solid_waste_ecological" value
 * @method EIAProjectDescription setSolidWasteDumpsite()                  Sets the current record's "solid_waste_dumpsite" value
 * @method EIAProjectDescription setSolidWasteMunicipal()                 Sets the current record's "solid_waste_municipal" value
 * @method EIAProjectDescription setSolidWasteOthers()                    Sets the current record's "solid_waste_others" value
 * @method EIAProjectDescription setSolidWasteOthersSpecify()             Sets the current record's "solid_waste_others_specify" value
 * @method EIAProjectDescription setManPowerEmploymentImplementation()    Sets the current record's "man_power_employment_implementation" value
 * @method EIAProjectDescription setManPowerEmploymentOperation()         Sets the current record's "man_power_employment_operation" value
 * @method EIAProjectDescription setImplementationDuration()              Sets the current record's "implementation_duration" value
 * @method EIAProjectDescription setToken()                               Sets the current record's "token" value
 * @method EIAProjectDescription setResubmit()                            Sets the current record's "resubmit" value
 * @method EIAProjectDescription setEIAProjectDetail()                    Sets the current record's "EIAProjectDetail" value
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEIAProjectDescription extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('e_i_a_project_description');
        $this->hasColumn('eiaproject_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('project_nature', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('project_objective', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));
        $this->hasColumn('project_total_cost', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('project_working_capital', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('total_land_area', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('existing_land_use', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('site_location_developed_area', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('site_location_undeveloped_area', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('site_location_other', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('site_location_other_specify', 'string', 400, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 400,
             ));
        $this->hasColumn('land_use_residential', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_industrial', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_tourism', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_commercial', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_instituational', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_openspace', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_other', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_other_specify', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 1000,
             ));
        $this->hasColumn('project_components', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 1000,
             ));
        $this->hasColumn('project_activities', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 1000,
             ));
        $this->hasColumn('water_demand_during_implementation', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('water_demand_during_operation', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('public_water_supply', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('water_treatment', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('sewage_system', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('sewage_system_modern', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('sewage_system_ecosan', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('sewage_system_biogas', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('sewage_system_other', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('sewage_system_other_specify', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('sewage_system_capacity', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('power_supply_local_electricity', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('power_supply_own_generator', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('power_supply_local_electricity_size', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('power_supply_own_generator_capacity', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('power_supply_other', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('power_supply_other_specify', 'string', 400, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 400,
             ));
        $this->hasColumn('solid_waste_ecological', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('solid_waste_dumpsite', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('solid_waste_municipal', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('solid_waste_others', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('solid_waste_others_specify', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 1000,
             ));
        $this->hasColumn('man_power_employment_implementation', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('man_power_employment_operation', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('implementation_duration', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('resubmit', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EIAProjectDetail', array(
             'local' => 'eiaproject_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}