<?php

/**
 * BaseEIComments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $eiaproject_id
 * @property string $eir_document_commented
 * @property integer $processed_by
 * @property string $token
 * @property EIAProjectDetail $EIAProjectDetail
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer          getEiaprojectId()           Returns the current record's "eiaproject_id" value
 * @method string           getEirDocumentCommented()   Returns the current record's "eir_document_commented" value
 * @method integer          getProcessedBy()            Returns the current record's "processed_by" value
 * @method string           getToken()                  Returns the current record's "token" value
 * @method EIAProjectDetail getEIAProjectDetail()       Returns the current record's "EIAProjectDetail" value
 * @method sfGuardUser      getSfGuardUser()            Returns the current record's "sfGuardUser" value
 * @method EIComments       setEiaprojectId()           Sets the current record's "eiaproject_id" value
 * @method EIComments       setEirDocumentCommented()   Sets the current record's "eir_document_commented" value
 * @method EIComments       setProcessedBy()            Sets the current record's "processed_by" value
 * @method EIComments       setToken()                  Sets the current record's "token" value
 * @method EIComments       setEIAProjectDetail()       Sets the current record's "EIAProjectDetail" value
 * @method EIComments       setSfGuardUser()            Sets the current record's "sfGuardUser" value
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEIComments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('e_i_comments');
        $this->hasColumn('eiaproject_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('eir_document_commented', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('processed_by', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EIAProjectDetail', array(
             'local' => 'eiaproject_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'processed_by',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}