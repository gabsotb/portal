<?php

/**
 * BaseRejectedApplications
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $business_id
 * @property string $applicant_reference_number
 * @property integer $business_registration
 * @property string $application_type
 * @property string $reasons
 * @property string $comments
 * @property string $token
 * @property InvestmentApplication $InvestmentApplication
 * 
 * @method integer               getBusinessId()                 Returns the current record's "business_id" value
 * @method string                getApplicantReferenceNumber()   Returns the current record's "applicant_reference_number" value
 * @method integer               getBusinessRegistration()       Returns the current record's "business_registration" value
 * @method string                getApplicationType()            Returns the current record's "application_type" value
 * @method string                getReasons()                    Returns the current record's "reasons" value
 * @method string                getComments()                   Returns the current record's "comments" value
 * @method string                getToken()                      Returns the current record's "token" value
 * @method InvestmentApplication getInvestmentApplication()      Returns the current record's "InvestmentApplication" value
 * @method RejectedApplications  setBusinessId()                 Sets the current record's "business_id" value
 * @method RejectedApplications  setApplicantReferenceNumber()   Sets the current record's "applicant_reference_number" value
 * @method RejectedApplications  setBusinessRegistration()       Sets the current record's "business_registration" value
 * @method RejectedApplications  setApplicationType()            Sets the current record's "application_type" value
 * @method RejectedApplications  setReasons()                    Sets the current record's "reasons" value
 * @method RejectedApplications  setComments()                   Sets the current record's "comments" value
 * @method RejectedApplications  setToken()                      Sets the current record's "token" value
 * @method RejectedApplications  setInvestmentApplication()      Sets the current record's "InvestmentApplication" value
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRejectedApplications extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rejected_applications');
        $this->hasColumn('business_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('applicant_reference_number', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('business_registration', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('application_type', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('reasons', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 1000,
             ));
        $this->hasColumn('comments', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 1000,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('InvestmentApplication', array(
             'local' => 'business_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}