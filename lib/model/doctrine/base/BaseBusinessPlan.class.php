<?php

/**
 * BaseBusinessPlan
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $investment_id
 * @property string $executive_summary
 * @property string $promoter_profile
 * @property string $project_background
 * @property string $equity_financing
 * @property string $income_statement
 * @property string $cashflow_statement
 * @property string $payback_period
 * @property string $npv
 * @property string $loan_amortization
 * @property string $implementation_plan
 * @property string $notes
 * @property InvestmentApplication $InvestmentApplication
 * 
 * @method integer               getInvestmentId()          Returns the current record's "investment_id" value
 * @method string                getExecutiveSummary()      Returns the current record's "executive_summary" value
 * @method string                getPromoterProfile()       Returns the current record's "promoter_profile" value
 * @method string                getProjectBackground()     Returns the current record's "project_background" value
 * @method string                getEquityFinancing()       Returns the current record's "equity_financing" value
 * @method string                getIncomeStatement()       Returns the current record's "income_statement" value
 * @method string                getCashflowStatement()     Returns the current record's "cashflow_statement" value
 * @method string                getPaybackPeriod()         Returns the current record's "payback_period" value
 * @method string                getNpv()                   Returns the current record's "npv" value
 * @method string                getLoanAmortization()      Returns the current record's "loan_amortization" value
 * @method string                getImplementationPlan()    Returns the current record's "implementation_plan" value
 * @method string                getNotes()                 Returns the current record's "notes" value
 * @method InvestmentApplication getInvestmentApplication() Returns the current record's "InvestmentApplication" value
 * @method BusinessPlan          setInvestmentId()          Sets the current record's "investment_id" value
 * @method BusinessPlan          setExecutiveSummary()      Sets the current record's "executive_summary" value
 * @method BusinessPlan          setPromoterProfile()       Sets the current record's "promoter_profile" value
 * @method BusinessPlan          setProjectBackground()     Sets the current record's "project_background" value
 * @method BusinessPlan          setEquityFinancing()       Sets the current record's "equity_financing" value
 * @method BusinessPlan          setIncomeStatement()       Sets the current record's "income_statement" value
 * @method BusinessPlan          setCashflowStatement()     Sets the current record's "cashflow_statement" value
 * @method BusinessPlan          setPaybackPeriod()         Sets the current record's "payback_period" value
 * @method BusinessPlan          setNpv()                   Sets the current record's "npv" value
 * @method BusinessPlan          setLoanAmortization()      Sets the current record's "loan_amortization" value
 * @method BusinessPlan          setImplementationPlan()    Sets the current record's "implementation_plan" value
 * @method BusinessPlan          setNotes()                 Sets the current record's "notes" value
 * @method BusinessPlan          setInvestmentApplication() Sets the current record's "InvestmentApplication" value
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBusinessPlan extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('business_plan');
        $this->hasColumn('investment_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('executive_summary', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('promoter_profile', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('project_background', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('equity_financing', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('income_statement', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('cashflow_statement', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('payback_period', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('npv', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('loan_amortization', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('implementation_plan', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('notes', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('InvestmentApplication', array(
             'local' => 'investment_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}