<?php

/**
 * BaseEIAProjectDeveloper
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $eiaproject_id
 * @property string $developer_name
 * @property string $contact_person
 * @property string $address
 * @property string $telephone
 * @property string $mobile_phone
 * @property string $email_address
 * @property string $communication_mode
 * @property string $social_media_account
 * @property string $token
 * @property EIAProjectDetail $EIAProjectDetail
 * 
 * @method integer             getEiaprojectId()         Returns the current record's "eiaproject_id" value
 * @method string              getDeveloperName()        Returns the current record's "developer_name" value
 * @method string              getContactPerson()        Returns the current record's "contact_person" value
 * @method string              getAddress()              Returns the current record's "address" value
 * @method string              getTelephone()            Returns the current record's "telephone" value
 * @method string              getMobilePhone()          Returns the current record's "mobile_phone" value
 * @method string              getEmailAddress()         Returns the current record's "email_address" value
 * @method string              getCommunicationMode()    Returns the current record's "communication_mode" value
 * @method string              getSocialMediaAccount()   Returns the current record's "social_media_account" value
 * @method string              getToken()                Returns the current record's "token" value
 * @method EIAProjectDetail    getEIAProjectDetail()     Returns the current record's "EIAProjectDetail" value
 * @method EIAProjectDeveloper setEiaprojectId()         Sets the current record's "eiaproject_id" value
 * @method EIAProjectDeveloper setDeveloperName()        Sets the current record's "developer_name" value
 * @method EIAProjectDeveloper setContactPerson()        Sets the current record's "contact_person" value
 * @method EIAProjectDeveloper setAddress()              Sets the current record's "address" value
 * @method EIAProjectDeveloper setTelephone()            Sets the current record's "telephone" value
 * @method EIAProjectDeveloper setMobilePhone()          Sets the current record's "mobile_phone" value
 * @method EIAProjectDeveloper setEmailAddress()         Sets the current record's "email_address" value
 * @method EIAProjectDeveloper setCommunicationMode()    Sets the current record's "communication_mode" value
 * @method EIAProjectDeveloper setSocialMediaAccount()   Sets the current record's "social_media_account" value
 * @method EIAProjectDeveloper setToken()                Sets the current record's "token" value
 * @method EIAProjectDeveloper setEIAProjectDetail()     Sets the current record's "EIAProjectDetail" value
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEIAProjectDeveloper extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('e_i_a_project_developer');
        $this->hasColumn('eiaproject_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('developer_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('contact_person', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('telephone', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('mobile_phone', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('email_address', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('communication_mode', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('social_media_account', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EIAProjectDetail', array(
             'local' => 'eiaproject_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}