<?php

/**
 * BaseTorDecisions
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $tor_id
 * @property string $decision
 * @property string $comments
 * @property Tor $Tor
 * 
 * @method integer      getTorId()    Returns the current record's "tor_id" value
 * @method string       getDecision() Returns the current record's "decision" value
 * @method string       getComments() Returns the current record's "comments" value
 * @method Tor          getTor()      Returns the current record's "Tor" value
 * @method TorDecisions setTorId()    Sets the current record's "tor_id" value
 * @method TorDecisions setDecision() Sets the current record's "decision" value
 * @method TorDecisions setComments() Sets the current record's "comments" value
 * @method TorDecisions setTor()      Sets the current record's "Tor" value
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTorDecisions extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tor_decisions');
        $this->hasColumn('tor_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('decision', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('comments', 'string', 400, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 400,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Tor', array(
             'local' => 'tor_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}