<?php

/**
 * BaseInvestmentApplication
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $registration_number
 * @property string $title_in_company
 * @property string $business_sector
 * @property string $business_category
 * @property string $office_telephone
 * @property string $fax
 * @property string $post_box
 * @property string $location
 * @property string $sector
 * @property string $district
 * @property string $city_province
 * @property string $token
 * @property Doctrine_Collection $InvestmentBusinessPlan
 * @property Doctrine_Collection $StructureFinancial
 * @property Doctrine_Collection $BusinessPlanCosts
 * @property Doctrine_Collection $BusinessPlanStartup
 * @property Doctrine_Collection $EmploymentLocal
 * @property Doctrine_Collection $EmploymentForeign
 * @property Doctrine_Collection $PlannedPerformanceApplication
 * @property Doctrine_Collection $InvestmentSummary
 * @property Doctrine_Collection $ApplicationAssigment
 * @property Doctrine_Collection $InvestmentAppBusinesStatus
 * @property Doctrine_Collection $InvestmentApprovedBusiness
 * @property Doctrine_Collection $InvestmentCertificate
 * 
 * @method string                getName()                          Returns the current record's "name" value
 * @method string                getRegistrationNumber()            Returns the current record's "registration_number" value
 * @method string                getTitleInCompany()                Returns the current record's "title_in_company" value
 * @method string                getBusinessSector()                Returns the current record's "business_sector" value
 * @method string                getBusinessCategory()              Returns the current record's "business_category" value
 * @method string                getOfficeTelephone()               Returns the current record's "office_telephone" value
 * @method string                getFax()                           Returns the current record's "fax" value
 * @method string                getPostBox()                       Returns the current record's "post_box" value
 * @method string                getLocation()                      Returns the current record's "location" value
 * @method string                getSector()                        Returns the current record's "sector" value
 * @method string                getDistrict()                      Returns the current record's "district" value
 * @method string                getCityProvince()                  Returns the current record's "city_province" value
 * @method string                getToken()                         Returns the current record's "token" value
 * @method Doctrine_Collection   getInvestmentBusinessPlan()        Returns the current record's "InvestmentBusinessPlan" collection
 * @method Doctrine_Collection   getStructureFinancial()            Returns the current record's "StructureFinancial" collection
 * @method Doctrine_Collection   getBusinessPlanCosts()             Returns the current record's "BusinessPlanCosts" collection
 * @method Doctrine_Collection   getBusinessPlanStartup()           Returns the current record's "BusinessPlanStartup" collection
 * @method Doctrine_Collection   getEmploymentLocal()               Returns the current record's "EmploymentLocal" collection
 * @method Doctrine_Collection   getEmploymentForeign()             Returns the current record's "EmploymentForeign" collection
 * @method Doctrine_Collection   getPlannedPerformanceApplication() Returns the current record's "PlannedPerformanceApplication" collection
 * @method Doctrine_Collection   getInvestmentSummary()             Returns the current record's "InvestmentSummary" collection
 * @method Doctrine_Collection   getApplicationAssigment()          Returns the current record's "ApplicationAssigment" collection
 * @method Doctrine_Collection   getInvestmentAppBusinesStatus()    Returns the current record's "InvestmentAppBusinesStatus" collection
 * @method Doctrine_Collection   getInvestmentApprovedBusiness()    Returns the current record's "InvestmentApprovedBusiness" collection
 * @method Doctrine_Collection   getInvestmentCertificate()         Returns the current record's "InvestmentCertificate" collection
 * @method InvestmentApplication setName()                          Sets the current record's "name" value
 * @method InvestmentApplication setRegistrationNumber()            Sets the current record's "registration_number" value
 * @method InvestmentApplication setTitleInCompany()                Sets the current record's "title_in_company" value
 * @method InvestmentApplication setBusinessSector()                Sets the current record's "business_sector" value
 * @method InvestmentApplication setBusinessCategory()              Sets the current record's "business_category" value
 * @method InvestmentApplication setOfficeTelephone()               Sets the current record's "office_telephone" value
 * @method InvestmentApplication setFax()                           Sets the current record's "fax" value
 * @method InvestmentApplication setPostBox()                       Sets the current record's "post_box" value
 * @method InvestmentApplication setLocation()                      Sets the current record's "location" value
 * @method InvestmentApplication setSector()                        Sets the current record's "sector" value
 * @method InvestmentApplication setDistrict()                      Sets the current record's "district" value
 * @method InvestmentApplication setCityProvince()                  Sets the current record's "city_province" value
 * @method InvestmentApplication setToken()                         Sets the current record's "token" value
 * @method InvestmentApplication setInvestmentBusinessPlan()        Sets the current record's "InvestmentBusinessPlan" collection
 * @method InvestmentApplication setStructureFinancial()            Sets the current record's "StructureFinancial" collection
 * @method InvestmentApplication setBusinessPlanCosts()             Sets the current record's "BusinessPlanCosts" collection
 * @method InvestmentApplication setBusinessPlanStartup()           Sets the current record's "BusinessPlanStartup" collection
 * @method InvestmentApplication setEmploymentLocal()               Sets the current record's "EmploymentLocal" collection
 * @method InvestmentApplication setEmploymentForeign()             Sets the current record's "EmploymentForeign" collection
 * @method InvestmentApplication setPlannedPerformanceApplication() Sets the current record's "PlannedPerformanceApplication" collection
 * @method InvestmentApplication setInvestmentSummary()             Sets the current record's "InvestmentSummary" collection
 * @method InvestmentApplication setApplicationAssigment()          Sets the current record's "ApplicationAssigment" collection
 * @method InvestmentApplication setInvestmentAppBusinesStatus()    Sets the current record's "InvestmentAppBusinesStatus" collection
 * @method InvestmentApplication setInvestmentApprovedBusiness()    Sets the current record's "InvestmentApprovedBusiness" collection
 * @method InvestmentApplication setInvestmentCertificate()         Sets the current record's "InvestmentCertificate" collection
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvestmentApplication extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('investment_application');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('registration_number', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('title_in_company', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('business_sector', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('business_category', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('office_telephone', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('fax', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('post_box', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('location', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('sector', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('district', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('city_province', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('BusinessPlan as InvestmentBusinessPlan', array(
             'local' => 'id',
             'foreign' => 'investment_id'));

        $this->hasMany('Structurefinancial as StructureFinancial', array(
             'local' => 'id',
             'foreign' => 'business_plan'));

        $this->hasMany('Costs as BusinessPlanCosts', array(
             'local' => 'id',
             'foreign' => 'business_plan'));

        $this->hasMany('Startupexpenses as BusinessPlanStartup', array(
             'local' => 'id',
             'foreign' => 'business_plan'));

        $this->hasMany('Employementlocal as EmploymentLocal', array(
             'local' => 'id',
             'foreign' => 'business_plan'));

        $this->hasMany('Employementforeign as EmploymentForeign', array(
             'local' => 'id',
             'foreign' => 'business_plan'));

        $this->hasMany('Plannedperformance as PlannedPerformanceApplication', array(
             'local' => 'id',
             'foreign' => 'business_plan'));

        $this->hasMany('ProjectSummary as InvestmentSummary', array(
             'local' => 'id',
             'foreign' => 'investment_id'));

        $this->hasMany('TaskAssignment as ApplicationAssigment', array(
             'local' => 'id',
             'foreign' => 'investmentapp_id'));

        $this->hasMany('BusinessApplicationStatus as InvestmentAppBusinesStatus', array(
             'local' => 'id',
             'foreign' => 'business_id'));

        $this->hasMany('ApprovedApplications as InvestmentApprovedBusiness', array(
             'local' => 'id',
             'foreign' => 'business_id'));

        $this->hasMany('InvestmentCertificate', array(
             'local' => 'id',
             'foreign' => 'business_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}