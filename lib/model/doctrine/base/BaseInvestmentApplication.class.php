<?php

/**
 * BaseInvestmentApplication
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $business_name
 * @property string $email_address
 * @property string $phone_number
 * @property string $application_letter
 * @property string $executive_summary
 * @property string $promoter_profile
 * @property string $project_backgroud
 * @property string $market_study
 * @property string $investment_plan
 * @property string $equity_financing
 * @property string $income_expenditure
 * @property string $balance_sheet
 * @property string $cash_flow
 * @property string $payback_period
 * @property string $loan_amortazation
 * @property string $username_logged
 * 
 * @method string                getBusinessName()       Returns the current record's "business_name" value
 * @method string                getEmailAddress()       Returns the current record's "email_address" value
 * @method string                getPhoneNumber()        Returns the current record's "phone_number" value
 * @method string                getApplicationLetter()  Returns the current record's "application_letter" value
 * @method string                getExecutiveSummary()   Returns the current record's "executive_summary" value
 * @method string                getPromoterProfile()    Returns the current record's "promoter_profile" value
 * @method string                getProjectBackgroud()   Returns the current record's "project_backgroud" value
 * @method string                getMarketStudy()        Returns the current record's "market_study" value
 * @method string                getInvestmentPlan()     Returns the current record's "investment_plan" value
 * @method string                getEquityFinancing()    Returns the current record's "equity_financing" value
 * @method string                getIncomeExpenditure()  Returns the current record's "income_expenditure" value
 * @method string                getBalanceSheet()       Returns the current record's "balance_sheet" value
 * @method string                getCashFlow()           Returns the current record's "cash_flow" value
 * @method string                getPaybackPeriod()      Returns the current record's "payback_period" value
 * @method string                getLoanAmortazation()   Returns the current record's "loan_amortazation" value
 * @method string                getUsernameLogged()     Returns the current record's "username_logged" value
 * @method InvestmentApplication setBusinessName()       Sets the current record's "business_name" value
 * @method InvestmentApplication setEmailAddress()       Sets the current record's "email_address" value
 * @method InvestmentApplication setPhoneNumber()        Sets the current record's "phone_number" value
 * @method InvestmentApplication setApplicationLetter()  Sets the current record's "application_letter" value
 * @method InvestmentApplication setExecutiveSummary()   Sets the current record's "executive_summary" value
 * @method InvestmentApplication setPromoterProfile()    Sets the current record's "promoter_profile" value
 * @method InvestmentApplication setProjectBackgroud()   Sets the current record's "project_backgroud" value
 * @method InvestmentApplication setMarketStudy()        Sets the current record's "market_study" value
 * @method InvestmentApplication setInvestmentPlan()     Sets the current record's "investment_plan" value
 * @method InvestmentApplication setEquityFinancing()    Sets the current record's "equity_financing" value
 * @method InvestmentApplication setIncomeExpenditure()  Sets the current record's "income_expenditure" value
 * @method InvestmentApplication setBalanceSheet()       Sets the current record's "balance_sheet" value
 * @method InvestmentApplication setCashFlow()           Sets the current record's "cash_flow" value
 * @method InvestmentApplication setPaybackPeriod()      Sets the current record's "payback_period" value
 * @method InvestmentApplication setLoanAmortazation()   Sets the current record's "loan_amortazation" value
 * @method InvestmentApplication setUsernameLogged()     Sets the current record's "username_logged" value
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvestmentApplication extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('investment_application');
        $this->hasColumn('business_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('email_address', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('phone_number', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('application_letter', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('executive_summary', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('promoter_profile', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('project_backgroud', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('market_study', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('investment_plan', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('equity_financing', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('income_expenditure', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('balance_sheet', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('cash_flow', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('payback_period', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('loan_amortazation', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('username_logged', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}