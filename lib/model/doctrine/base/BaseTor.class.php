<?php

/**
 * BaseTor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $impact_id
 * @property string $issues_assessed
 * @property string $specific_tasks
 * @property string $stake_holders
 * @property string $experts
 * @property ProjectImpact $ProjectImpact
 * @property Doctrine_Collection $TorStatus
 * @property Doctrine_Collection $TorDecision
 * @property Doctrine_Collection $TechnicalSummary
 * 
 * @method integer             getImpactId()         Returns the current record's "impact_id" value
 * @method string              getIssuesAssessed()   Returns the current record's "issues_assessed" value
 * @method string              getSpecificTasks()    Returns the current record's "specific_tasks" value
 * @method string              getStakeHolders()     Returns the current record's "stake_holders" value
 * @method string              getExperts()          Returns the current record's "experts" value
 * @method ProjectImpact       getProjectImpact()    Returns the current record's "ProjectImpact" value
 * @method Doctrine_Collection getTorStatus()        Returns the current record's "TorStatus" collection
 * @method Doctrine_Collection getTorDecision()      Returns the current record's "TorDecision" collection
 * @method Doctrine_Collection getTechnicalSummary() Returns the current record's "TechnicalSummary" collection
 * @method Tor                 setImpactId()         Sets the current record's "impact_id" value
 * @method Tor                 setIssuesAssessed()   Sets the current record's "issues_assessed" value
 * @method Tor                 setSpecificTasks()    Sets the current record's "specific_tasks" value
 * @method Tor                 setStakeHolders()     Sets the current record's "stake_holders" value
 * @method Tor                 setExperts()          Sets the current record's "experts" value
 * @method Tor                 setProjectImpact()    Sets the current record's "ProjectImpact" value
 * @method Tor                 setTorStatus()        Sets the current record's "TorStatus" collection
 * @method Tor                 setTorDecision()      Sets the current record's "TorDecision" collection
 * @method Tor                 setTechnicalSummary() Sets the current record's "TechnicalSummary" collection
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tor');
        $this->hasColumn('impact_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('issues_assessed', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('specific_tasks', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('stake_holders', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('experts', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProjectImpact', array(
             'local' => 'impact_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('TorStatus', array(
             'local' => 'id',
             'foreign' => 'tor_id'));

        $this->hasMany('TorDecisions as TorDecision', array(
             'local' => 'id',
             'foreign' => 'tor_id'));

        $this->hasMany('TechnicalSummary', array(
             'local' => 'id',
             'foreign' => 'tor_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}