<?php

/**
 * BaseEIAProjectSurrounding
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $eiaproject_id
 * @property integer $project_general_elevation
 * @property boolean $soil_erosion
 * @property boolean $soil_erosion_heavy_rains
 * @property boolean $soil_erosion_unstable
 * @property boolean $soil_erosion_others
 * @property string $soil_erosion_others_specify
 * @property boolean $existing_water_body
 * @property string $existing_water_body_remark
 * @property boolean $access_road
 * @property integer $access_road_distance
 * @property string $access_road_type
 * @property boolean $site_conform_approval
 * @property string $site_conform_remark
 * @property boolean $site_existing_structure
 * @property string $site_existing_remark
 * @property boolean $land_use_agriculture
 * @property boolean $land_use_grassland
 * @property boolean $land_use_builtup
 * @property boolean $land_use_marshland
 * @property boolean $land_use_other
 * @property string $land_use_other_specify
 * @property boolean $existing_trees
 * @property string $existing_trees_remark
 * @property boolean $wildlife_existing
 * @property string $wildlife_existing_remark
 * @property boolean $fishery_existing
 * @property string $fishery_existing_remark
 * @property boolean $watershed_existing
 * @property integer $watershed_near_distance
 * @property string $watershed_near_distance_units
 * @property string $watershed_within_name
 * @property string $token
 * @property string $resubmit
 * @property EIAProjectDetail $EIAProjectDetail
 * @property Doctrine_Collection $EIAProjectSurroundingSpecies
 * 
 * @method integer               getEiaprojectId()                  Returns the current record's "eiaproject_id" value
 * @method integer               getProjectGeneralElevation()       Returns the current record's "project_general_elevation" value
 * @method boolean               getSoilErosion()                   Returns the current record's "soil_erosion" value
 * @method boolean               getSoilErosionHeavyRains()         Returns the current record's "soil_erosion_heavy_rains" value
 * @method boolean               getSoilErosionUnstable()           Returns the current record's "soil_erosion_unstable" value
 * @method boolean               getSoilErosionOthers()             Returns the current record's "soil_erosion_others" value
 * @method string                getSoilErosionOthersSpecify()      Returns the current record's "soil_erosion_others_specify" value
 * @method boolean               getExistingWaterBody()             Returns the current record's "existing_water_body" value
 * @method string                getExistingWaterBodyRemark()       Returns the current record's "existing_water_body_remark" value
 * @method boolean               getAccessRoad()                    Returns the current record's "access_road" value
 * @method integer               getAccessRoadDistance()            Returns the current record's "access_road_distance" value
 * @method string                getAccessRoadType()                Returns the current record's "access_road_type" value
 * @method boolean               getSiteConformApproval()           Returns the current record's "site_conform_approval" value
 * @method string                getSiteConformRemark()             Returns the current record's "site_conform_remark" value
 * @method boolean               getSiteExistingStructure()         Returns the current record's "site_existing_structure" value
 * @method string                getSiteExistingRemark()            Returns the current record's "site_existing_remark" value
 * @method boolean               getLandUseAgriculture()            Returns the current record's "land_use_agriculture" value
 * @method boolean               getLandUseGrassland()              Returns the current record's "land_use_grassland" value
 * @method boolean               getLandUseBuiltup()                Returns the current record's "land_use_builtup" value
 * @method boolean               getLandUseMarshland()              Returns the current record's "land_use_marshland" value
 * @method boolean               getLandUseOther()                  Returns the current record's "land_use_other" value
 * @method string                getLandUseOtherSpecify()           Returns the current record's "land_use_other_specify" value
 * @method boolean               getExistingTrees()                 Returns the current record's "existing_trees" value
 * @method string                getExistingTreesRemark()           Returns the current record's "existing_trees_remark" value
 * @method boolean               getWildlifeExisting()              Returns the current record's "wildlife_existing" value
 * @method string                getWildlifeExistingRemark()        Returns the current record's "wildlife_existing_remark" value
 * @method boolean               getFisheryExisting()               Returns the current record's "fishery_existing" value
 * @method string                getFisheryExistingRemark()         Returns the current record's "fishery_existing_remark" value
 * @method boolean               getWatershedExisting()             Returns the current record's "watershed_existing" value
 * @method integer               getWatershedNearDistance()         Returns the current record's "watershed_near_distance" value
 * @method string                getWatershedNearDistanceUnits()    Returns the current record's "watershed_near_distance_units" value
 * @method string                getWatershedWithinName()           Returns the current record's "watershed_within_name" value
 * @method string                getToken()                         Returns the current record's "token" value
 * @method string                getResubmit()                      Returns the current record's "resubmit" value
 * @method EIAProjectDetail      getEIAProjectDetail()              Returns the current record's "EIAProjectDetail" value
 * @method Doctrine_Collection   getEIAProjectSurroundingSpecies()  Returns the current record's "EIAProjectSurroundingSpecies" collection
 * @method EIAProjectSurrounding setEiaprojectId()                  Sets the current record's "eiaproject_id" value
 * @method EIAProjectSurrounding setProjectGeneralElevation()       Sets the current record's "project_general_elevation" value
 * @method EIAProjectSurrounding setSoilErosion()                   Sets the current record's "soil_erosion" value
 * @method EIAProjectSurrounding setSoilErosionHeavyRains()         Sets the current record's "soil_erosion_heavy_rains" value
 * @method EIAProjectSurrounding setSoilErosionUnstable()           Sets the current record's "soil_erosion_unstable" value
 * @method EIAProjectSurrounding setSoilErosionOthers()             Sets the current record's "soil_erosion_others" value
 * @method EIAProjectSurrounding setSoilErosionOthersSpecify()      Sets the current record's "soil_erosion_others_specify" value
 * @method EIAProjectSurrounding setExistingWaterBody()             Sets the current record's "existing_water_body" value
 * @method EIAProjectSurrounding setExistingWaterBodyRemark()       Sets the current record's "existing_water_body_remark" value
 * @method EIAProjectSurrounding setAccessRoad()                    Sets the current record's "access_road" value
 * @method EIAProjectSurrounding setAccessRoadDistance()            Sets the current record's "access_road_distance" value
 * @method EIAProjectSurrounding setAccessRoadType()                Sets the current record's "access_road_type" value
 * @method EIAProjectSurrounding setSiteConformApproval()           Sets the current record's "site_conform_approval" value
 * @method EIAProjectSurrounding setSiteConformRemark()             Sets the current record's "site_conform_remark" value
 * @method EIAProjectSurrounding setSiteExistingStructure()         Sets the current record's "site_existing_structure" value
 * @method EIAProjectSurrounding setSiteExistingRemark()            Sets the current record's "site_existing_remark" value
 * @method EIAProjectSurrounding setLandUseAgriculture()            Sets the current record's "land_use_agriculture" value
 * @method EIAProjectSurrounding setLandUseGrassland()              Sets the current record's "land_use_grassland" value
 * @method EIAProjectSurrounding setLandUseBuiltup()                Sets the current record's "land_use_builtup" value
 * @method EIAProjectSurrounding setLandUseMarshland()              Sets the current record's "land_use_marshland" value
 * @method EIAProjectSurrounding setLandUseOther()                  Sets the current record's "land_use_other" value
 * @method EIAProjectSurrounding setLandUseOtherSpecify()           Sets the current record's "land_use_other_specify" value
 * @method EIAProjectSurrounding setExistingTrees()                 Sets the current record's "existing_trees" value
 * @method EIAProjectSurrounding setExistingTreesRemark()           Sets the current record's "existing_trees_remark" value
 * @method EIAProjectSurrounding setWildlifeExisting()              Sets the current record's "wildlife_existing" value
 * @method EIAProjectSurrounding setWildlifeExistingRemark()        Sets the current record's "wildlife_existing_remark" value
 * @method EIAProjectSurrounding setFisheryExisting()               Sets the current record's "fishery_existing" value
 * @method EIAProjectSurrounding setFisheryExistingRemark()         Sets the current record's "fishery_existing_remark" value
 * @method EIAProjectSurrounding setWatershedExisting()             Sets the current record's "watershed_existing" value
 * @method EIAProjectSurrounding setWatershedNearDistance()         Sets the current record's "watershed_near_distance" value
 * @method EIAProjectSurrounding setWatershedNearDistanceUnits()    Sets the current record's "watershed_near_distance_units" value
 * @method EIAProjectSurrounding setWatershedWithinName()           Sets the current record's "watershed_within_name" value
 * @method EIAProjectSurrounding setToken()                         Sets the current record's "token" value
 * @method EIAProjectSurrounding setResubmit()                      Sets the current record's "resubmit" value
 * @method EIAProjectSurrounding setEIAProjectDetail()              Sets the current record's "EIAProjectDetail" value
 * @method EIAProjectSurrounding setEIAProjectSurroundingSpecies()  Sets the current record's "EIAProjectSurroundingSpecies" collection
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEIAProjectSurrounding extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('e_i_a_project_surrounding');
        $this->hasColumn('eiaproject_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('project_general_elevation', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('soil_erosion', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('soil_erosion_heavy_rains', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('soil_erosion_unstable', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('soil_erosion_others', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('soil_erosion_others_specify', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('existing_water_body', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('existing_water_body_remark', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('access_road', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('access_road_distance', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('access_road_type', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('site_conform_approval', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('site_conform_remark', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('site_existing_structure', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('site_existing_remark', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('land_use_agriculture', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_grassland', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_builtup', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_marshland', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_other', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('land_use_other_specify', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('existing_trees', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('existing_trees_remark', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('wildlife_existing', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('wildlife_existing_remark', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('fishery_existing', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('fishery_existing_remark', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('watershed_existing', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('watershed_near_distance', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('watershed_near_distance_units', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('watershed_within_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('resubmit', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EIAProjectDetail', array(
             'local' => 'eiaproject_id',
             'foreign' => 'id'));

        $this->hasMany('EIAProjectSurroundingSpecies', array(
             'local' => 'id',
             'foreign' => 'project_surrounding_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}