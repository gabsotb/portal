<?php

/**
 * BaseEIAReports
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $module
 * @property integer $module_id
 * @property string $recommendations
 * @property Doctrine_Collection $EiaReport
 * 
 * @method string              getModule()          Returns the current record's "module" value
 * @method integer             getModuleId()        Returns the current record's "module_id" value
 * @method string              getRecommendations() Returns the current record's "recommendations" value
 * @method Doctrine_Collection getEiaReport()       Returns the current record's "EiaReport" collection
 * @method EIAReports          setModule()          Sets the current record's "module" value
 * @method EIAReports          setModuleId()        Sets the current record's "module_id" value
 * @method EIAReports          setRecommendations() Sets the current record's "recommendations" value
 * @method EIAReports          setEiaReport()       Sets the current record's "EiaReport" collection
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEIAReports extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('e_i_a_reports');
        $this->hasColumn('module', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('module_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('recommendations', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('EIAReportDecision as EiaReport', array(
             'local' => 'id',
             'foreign' => 'report_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created' => 
             array(
              'name' => 'created_by',
              'type' => 'string',
              'onUpdate' => 'CASCADE',
              'onDelete' => 'SET NULL',
              'options' => 
              array(
              'notnull' => true,
              'default' => 'None',
              ),
             ),
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}