<?php

/**
 * BaseTaxExemptionItems
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $tax_details_id
 * @property boolean $rdb
 * @property boolean $rra
 * @property integer $hs_code
 * @property string $description
 * @property integer $cif
 * @property integer $quantity
 * @property integer $import_duties
 * @property TaxExemptionDetails $TaxExemptionDetails
 * 
 * @method integer             getTaxDetailsId()        Returns the current record's "tax_details_id" value
 * @method boolean             getRdb()                 Returns the current record's "rdb" value
 * @method boolean             getRra()                 Returns the current record's "rra" value
 * @method integer             getHsCode()              Returns the current record's "hs_code" value
 * @method string              getDescription()         Returns the current record's "description" value
 * @method integer             getCif()                 Returns the current record's "cif" value
 * @method integer             getQuantity()            Returns the current record's "quantity" value
 * @method integer             getImportDuties()        Returns the current record's "import_duties" value
 * @method TaxExemptionDetails getTaxExemptionDetails() Returns the current record's "TaxExemptionDetails" value
 * @method TaxExemptionItems   setTaxDetailsId()        Sets the current record's "tax_details_id" value
 * @method TaxExemptionItems   setRdb()                 Sets the current record's "rdb" value
 * @method TaxExemptionItems   setRra()                 Sets the current record's "rra" value
 * @method TaxExemptionItems   setHsCode()              Sets the current record's "hs_code" value
 * @method TaxExemptionItems   setDescription()         Sets the current record's "description" value
 * @method TaxExemptionItems   setCif()                 Sets the current record's "cif" value
 * @method TaxExemptionItems   setQuantity()            Sets the current record's "quantity" value
 * @method TaxExemptionItems   setImportDuties()        Sets the current record's "import_duties" value
 * @method TaxExemptionItems   setTaxExemptionDetails() Sets the current record's "TaxExemptionDetails" value
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTaxExemptionItems extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tax_exemption_items');
        $this->hasColumn('tax_details_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('rdb', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('rra', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
        $this->hasColumn('hs_code', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('description', 'string', 600, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 600,
             ));
        $this->hasColumn('cif', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('quantity', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('import_duties', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TaxExemptionDetails', array(
             'local' => 'tax_details_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}