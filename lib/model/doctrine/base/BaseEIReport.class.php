<?php

/**
 * BaseEIReport
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $company_id
 * @property string $ei_doc
 * @property string $emp_doc
 * @property EIApplication $EIApplication
 * @property Doctrine_Collection $StudyDecision
 * 
 * @method integer             getCompanyId()     Returns the current record's "company_id" value
 * @method string              getEiDoc()         Returns the current record's "ei_doc" value
 * @method string              getEmpDoc()        Returns the current record's "emp_doc" value
 * @method EIApplication       getEIApplication() Returns the current record's "EIApplication" value
 * @method Doctrine_Collection getStudyDecision() Returns the current record's "StudyDecision" collection
 * @method EIReport            setCompanyId()     Sets the current record's "company_id" value
 * @method EIReport            setEiDoc()         Sets the current record's "ei_doc" value
 * @method EIReport            setEmpDoc()        Sets the current record's "emp_doc" value
 * @method EIReport            setEIApplication() Sets the current record's "EIApplication" value
 * @method EIReport            setStudyDecision() Sets the current record's "StudyDecision" collection
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEIReport extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('e_i_report');
        $this->hasColumn('company_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('ei_doc', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('emp_doc', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EIApplication', array(
             'local' => 'company_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('EIApplicationDecision as StudyDecision', array(
             'local' => 'id',
             'foreign' => 'eireport_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}