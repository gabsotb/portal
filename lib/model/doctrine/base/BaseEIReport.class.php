<?php

/**
 * BaseEIReport
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $eiaproject_id
 * @property string $word_doc
 * @property string $pdf_doc
 * @property string $status
 * @property string $comments
 * @property string $token
 * @property EIAProjectDetail $EIAProjectDetail
 * @property Doctrine_Collection $StudyDecision
 * @property Doctrine_Collection $DataAdminPermissionRequest
 * 
 * @method integer             getEiaprojectId()               Returns the current record's "eiaproject_id" value
 * @method string              getWordDoc()                    Returns the current record's "word_doc" value
 * @method string              getPdfDoc()                     Returns the current record's "pdf_doc" value
 * @method string              getStatus()                     Returns the current record's "status" value
 * @method string              getComments()                   Returns the current record's "comments" value
 * @method string              getToken()                      Returns the current record's "token" value
 * @method EIAProjectDetail    getEIAProjectDetail()           Returns the current record's "EIAProjectDetail" value
 * @method Doctrine_Collection getStudyDecision()              Returns the current record's "StudyDecision" collection
 * @method Doctrine_Collection getDataAdminPermissionRequest() Returns the current record's "DataAdminPermissionRequest" collection
 * @method EIReport            setEiaprojectId()               Sets the current record's "eiaproject_id" value
 * @method EIReport            setWordDoc()                    Sets the current record's "word_doc" value
 * @method EIReport            setPdfDoc()                     Sets the current record's "pdf_doc" value
 * @method EIReport            setStatus()                     Sets the current record's "status" value
 * @method EIReport            setComments()                   Sets the current record's "comments" value
 * @method EIReport            setToken()                      Sets the current record's "token" value
 * @method EIReport            setEIAProjectDetail()           Sets the current record's "EIAProjectDetail" value
 * @method EIReport            setStudyDecision()              Sets the current record's "StudyDecision" collection
 * @method EIReport            setDataAdminPermissionRequest() Sets the current record's "DataAdminPermissionRequest" collection
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEIReport extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('e_i_report');
        $this->hasColumn('eiaproject_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('word_doc', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('pdf_doc', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('status', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('comments', 'string', 2000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 2000,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EIAProjectDetail', array(
             'local' => 'eiaproject_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('EIApplicationDecision as StudyDecision', array(
             'local' => 'id',
             'foreign' => 'eireport_id'));

        $this->hasMany('EIApplicationCertificatePermission as DataAdminPermissionRequest', array(
             'local' => 'id',
             'foreign' => 'eireport_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}