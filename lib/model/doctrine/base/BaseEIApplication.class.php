<?php

/**
 * BaseEIApplication
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $company_regno
 * @property string $developer_title
 * @property string $developer_address
 * @property string $project_name
 * @property string $project_purpose
 * @property string $project_nature
 * @property string $project_site
 * @property string $project_sitelaws
 * @property string $environment_impacts
 * @property string $other_alternatives
 * @property string $other_information
 * @property Doctrine_Collection $EIApplicationStatus
 * @property Doctrine_Collection $ApplicationAssigment
 * @property Doctrine_Collection $EIAProjectImpact
 * @property Doctrine_Collection $EIAStudyUploads
 * @property Doctrine_Collection $EIACertificate
 * 
 * @method string              getName()                 Returns the current record's "name" value
 * @method string              getCompanyRegno()         Returns the current record's "company_regno" value
 * @method string              getDeveloperTitle()       Returns the current record's "developer_title" value
 * @method string              getDeveloperAddress()     Returns the current record's "developer_address" value
 * @method string              getProjectName()          Returns the current record's "project_name" value
 * @method string              getProjectPurpose()       Returns the current record's "project_purpose" value
 * @method string              getProjectNature()        Returns the current record's "project_nature" value
 * @method string              getProjectSite()          Returns the current record's "project_site" value
 * @method string              getProjectSitelaws()      Returns the current record's "project_sitelaws" value
 * @method string              getEnvironmentImpacts()   Returns the current record's "environment_impacts" value
 * @method string              getOtherAlternatives()    Returns the current record's "other_alternatives" value
 * @method string              getOtherInformation()     Returns the current record's "other_information" value
 * @method Doctrine_Collection getEIApplicationStatus()  Returns the current record's "EIApplicationStatus" collection
 * @method Doctrine_Collection getApplicationAssigment() Returns the current record's "ApplicationAssigment" collection
 * @method Doctrine_Collection getEIAProjectImpact()     Returns the current record's "EIAProjectImpact" collection
 * @method Doctrine_Collection getEIAStudyUploads()      Returns the current record's "EIAStudyUploads" collection
 * @method Doctrine_Collection getEIACertificate()       Returns the current record's "EIACertificate" collection
 * @method EIApplication       setName()                 Sets the current record's "name" value
 * @method EIApplication       setCompanyRegno()         Sets the current record's "company_regno" value
 * @method EIApplication       setDeveloperTitle()       Sets the current record's "developer_title" value
 * @method EIApplication       setDeveloperAddress()     Sets the current record's "developer_address" value
 * @method EIApplication       setProjectName()          Sets the current record's "project_name" value
 * @method EIApplication       setProjectPurpose()       Sets the current record's "project_purpose" value
 * @method EIApplication       setProjectNature()        Sets the current record's "project_nature" value
 * @method EIApplication       setProjectSite()          Sets the current record's "project_site" value
 * @method EIApplication       setProjectSitelaws()      Sets the current record's "project_sitelaws" value
 * @method EIApplication       setEnvironmentImpacts()   Sets the current record's "environment_impacts" value
 * @method EIApplication       setOtherAlternatives()    Sets the current record's "other_alternatives" value
 * @method EIApplication       setOtherInformation()     Sets the current record's "other_information" value
 * @method EIApplication       setEIApplicationStatus()  Sets the current record's "EIApplicationStatus" collection
 * @method EIApplication       setApplicationAssigment() Sets the current record's "ApplicationAssigment" collection
 * @method EIApplication       setEIAProjectImpact()     Sets the current record's "EIAProjectImpact" collection
 * @method EIApplication       setEIAStudyUploads()      Sets the current record's "EIAStudyUploads" collection
 * @method EIApplication       setEIACertificate()       Sets the current record's "EIACertificate" collection
 * 
 * @package    rdbeportal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEIApplication extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('e_i_application');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('company_regno', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('developer_title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('developer_address', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('project_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('project_purpose', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('project_nature', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('project_site', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('project_sitelaws', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('environment_impacts', 'string', 400, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 400,
             ));
        $this->hasColumn('other_alternatives', 'string', 400, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 400,
             ));
        $this->hasColumn('other_information', 'string', 400, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 400,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('EIApplicationStatus', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('EITaskAssignment as ApplicationAssigment', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('ProjectImpact as EIAProjectImpact', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('EIReport as EIAStudyUploads', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('EIACertificate', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable(array(
             'created:{ name' => 'created_by,type: string,onUpdate: CASCADE,onDelete: SET NULL,options: {notnull: true,default: None}}',
             'updated' => 
             array(
              'name' => 'updated_by',
              'type' => 'string',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}